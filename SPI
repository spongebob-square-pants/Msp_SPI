#include <msp430.h>
#include <stdint.h>



void SPI_SendByte() {
    //while (!(UCA0IFG & UCTXIFG)); // Wait until TX buffer is ready
    UCA0TXBUF = 0X02;             // Transmit byte
}

int main(void) {

        WDTCTL = WDTPW | WDTHOLD;  // Stop the watchdog timer

        // Put USCI_A0 into reset
        UCA0CTL1 |= UCSWRST;

        // Configure USCI_A0 for SPI
        UCA0CTL0 = UCCKPH | UCMSB | UCMST | UCSYNC; // Clock phase, MSB first, Master mode, Synchronous mode
        UCA0CTL1 |= UCSSEL__SMCLK;                 // Select SMCLK as clock source
        UCA0BRW = 100;                              // Set SPI clock divider (SMCLK/10 = ~100kHz)

        // Configure SPI pins for USCI_A0
        P3SEL |= BIT3 | BIT4 | BIT5; // P3.3 = SCLK, P3.4 = SIMO, P3.5 = SOMI

        // Take USCI_A0 out of reset
        UCA0CTL1 &= ~UCSWRST;

        //P1OUT &= ~BIT5;


    while (1) {
        SPI_SendByte();       // Send a byte (e.g., 0x55)
       // __delay_cycles(100);     // Simple delay
    }
}
